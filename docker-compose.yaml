services:
  traefik:
    image: traefik:v3.1
    container_name: traefik
    command:
      - "--providers.docker=true"
      - "--entrypoints.web.address=:80"
      - "--api.dashboard=true"
    ports:
      - "80:80"
      - "8080:8080"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./traefik/traefik.yml:/etc/traefik/traefik.yml
    networks:
      - backend
    depends_on:
      - api

  postgres:
    image: postgres:16
    container_name: postgres
    restart: always
    environment:
      POSTGRES_USER: urlshort
      POSTGRES_PASSWORD: urlshortpwd
      POSTGRES_DB: urlshortdb
    ports:
      - "5432:5432"
    volumes:
      - pgdata:/var/lib/postgresql/data
    networks:
      - backend

  redis:
    image: redis:7
    container_name: redis
    ports:
      - "6379:6379"
    networks:
      - backend

  api:
    build: .
    container_name: api
    command: uvicorn app.main:app --host 0.0.0.0 --port 8000 --reload
    volumes:
      - .:/app
    environment:
      DATABASE_URL: postgresql+asyncpg://urlshort:urlshortpwd@postgres:5432/urlshortdb
      REDIS_URL: redis://redis:6379/0
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`localhost`)"
      - "traefik.http.services.api.loadbalancer.server.port=8000"
    depends_on:
      - postgres
      - redis
    networks:
      - backend

volumes:
  pgdata:

networks:
  backend:
    driver: bridge
